{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","preperedGood","sort","good1","good2","localeCompare","length","getSort","className","onClick","type","cn","map","product","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAA4B,iBAC5BC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA1BR,SAAiBC,EAAOL,EAAWE,GACjC,IAAMI,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITT,GACFI,EAAaJ,UAGRI,EAMcM,CAAQjB,EAAiBK,EAAWE,GAEzD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAC9B,WAAYhB,IAAcJ,KAJ9B,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CACjC,WAAYhB,IAAcH,KAJ9B,4BAUA,wBACEiB,QAAS,kBAAMX,GAAYD,IAC3Ba,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CACjC,YAAwB,IAAZd,KAJhB,sBAUEF,GAAaE,IAEX,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAW,IAEbY,KAAK,SACLF,UAAU,4BANZ,sBAcN,6BACGT,EAAaa,KAAI,SAAAC,GAAO,OACvB,oBAAkB,UAAQ,OAA1B,SACGA,GADMA,YChGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd586b25.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getSort(goods, sortField, reverse) {\n  const preperedGood = [...goods];\n\n  preperedGood.sort((good1, good2) => {\n    switch (sortField) {\n      case SORT_FIELD_ALPHABETICALLY:\n        return good1.localeCompare(good2);\n\n      case SORT_FIELD_LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    preperedGood.reverse();\n  }\n\n  return preperedGood;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getSort(goodsFromServer, sortField, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n          type=\"button\"\n          className={`button is-info ${cn({\n            'is-light': sortField !== SORT_FIELD_ALPHABETICALLY,\n          })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={`button is-warning ${cn({\n            'is-light': reverse === false,\n          })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse)\n          && (\n            <button\n              onClick={() => {\n                setSortField('');\n                setReverse(false);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(product => (\n          <li key={product} data-cy=\"Good\">\n            {product}\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}